// Mocks generated by Mockito 5.0.16 from annotations
// in badger_group_up/test/unit/login/register_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:badger_group_up/src/system/database.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [DatabaseMockito].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseMockito extends _i1.Mock implements _i2.DatabaseMockito {
  MockDatabaseMockito() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<List<dynamic>>> select(String? relation,
          {bool? all = true,
          List<String>? outputAttributes = const [],
          Map<String, String>? conditionals = const {}}) =>
      (super.noSuchMethod(
              Invocation.method(#select, [
                relation
              ], {
                #all: all,
                #outputAttributes: outputAttributes,
                #conditionals: conditionals
              }),
              returnValue: Future<List<List<dynamic>>>.value(<List<dynamic>>[]))
          as _i3.Future<List<List<dynamic>>>);
  @override
  _i3.Future<bool> update(String? relation, Map<String, String>? newValues,
          Map<String, String>? conditionals) =>
      (super.noSuchMethod(
          Invocation.method(#update, [relation, newValues, conditionals]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> insert(String? relation, Map<String, String>? attributes) =>
      (super.noSuchMethod(Invocation.method(#insert, [relation, attributes]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> delete(
          String? relation, Map<String, String>? conditionals) =>
      (super.noSuchMethod(Invocation.method(#delete, [relation, conditionals]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> create(String? relation, Map<String, String>? attributes) =>
      (super.noSuchMethod(Invocation.method(#create, [relation, attributes]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}
